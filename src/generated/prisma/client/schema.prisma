datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "./src/generated/prisma/client"
}

model User {
  id           Int        @id @default(autoincrement())
  name         String
  email        String     @unique
  passwordHash String
  polls        Poll[]
  votes        Vote[]
  sessions     Sessions[]
}

model Poll {
  id          Int           @id @default(autoincrement())
  question    String
  isPublished PublishStatus
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  PollOptions PollOption[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model PollOption {
  id     Int    @id @default(autoincrement())
  text   String
  poll   Poll   @relation(fields: [pollId], references: [id], onDelete: Cascade)
  pollId Int
  votes  Vote[]
}

model Vote {
  id           Int        @id @default(autoincrement())
  pollOption   PollOption @relation(fields: [pollOptionId], references: [id], onDelete: Cascade)
  pollOptionId Int
  user         User       @relation(fields: [userId], references: [id])
  userId       Int

  @@unique([userId, pollOptionId])
}

model Sessions {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  token  String @unique
}

enum PublishStatus {
  PUBLISHED
  UNPUBLISHED
}
